/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./init */ "./src/js/init.js");

window.addEventListener('DOMContentLoaded', function (event) {
  _init__WEBPACK_IMPORTED_MODULE_0__["game"].init(); /////////////////////////////
  //Adding the eventListener to the Roll Dice button
  /////////////////////////////

  _init__WEBPACK_IMPORTED_MODULE_0__["game"].elBtnRoll.addEventListener("click", function () {
    //set the state variable to run the game only if the game is running :)
    if (_init__WEBPACK_IMPORTED_MODULE_0__["game"].isGamePlaying) {
      _init__WEBPACK_IMPORTED_MODULE_0__["game"].elPlayerPanel0 = document.querySelector(".player-0-panel");
      _init__WEBPACK_IMPORTED_MODULE_0__["game"].elPlayerPanel1 = document.querySelector(".player-1-panel"); //Activating the random number selection for the Dice

      var min = 1;
      var max = 6;
      var dice = Math.floor(Math.random() * (max - min + 1)) + min; //When the game starts, show the dice in the middle

      _init__WEBPACK_IMPORTED_MODULE_0__["game"].elMiddleDice.style.display = "block"; //Show the right dice side, according to the randomly generated number

      _init__WEBPACK_IMPORTED_MODULE_0__["game"].elMiddleDice.src = "img/dice-".concat(dice, ".png"); // The logic

      if (dice !== 1) {
        //If the number is not 1, add the number to the roundScore
        _init__WEBPACK_IMPORTED_MODULE_0__["game"].roundScore += dice;
        document.querySelector("#current-".concat(_init__WEBPACK_IMPORTED_MODULE_0__["game"].activePlayer)).textContent = _init__WEBPACK_IMPORTED_MODULE_0__["game"].roundScore;
      } else {
        nextPlayer();
      }
    }
  });
  _init__WEBPACK_IMPORTED_MODULE_0__["game"].elBtnHold.addEventListener("click", function () {
    //set the state variable to use the hold button only if the game is running :)
    if (_init__WEBPACK_IMPORTED_MODULE_0__["game"].isGamePlaying) {
      //add the current(round) score to the total score in the array. ActivePlayer acts as the array Index;
      _init__WEBPACK_IMPORTED_MODULE_0__["game"].scores[_init__WEBPACK_IMPORTED_MODULE_0__["game"].activePlayer] += _init__WEBPACK_IMPORTED_MODULE_0__["game"].roundScore;
      document.querySelector("#score-".concat(_init__WEBPACK_IMPORTED_MODULE_0__["game"].activePlayer)).textContent = _init__WEBPACK_IMPORTED_MODULE_0__["game"].scores[_init__WEBPACK_IMPORTED_MODULE_0__["game"].activePlayer];

      if (_init__WEBPACK_IMPORTED_MODULE_0__["game"].scores[_init__WEBPACK_IMPORTED_MODULE_0__["game"].activePlayer] >= 30) {
        document.querySelector("#name-".concat(_init__WEBPACK_IMPORTED_MODULE_0__["game"].activePlayer)).textContent = "WINNER";
        _init__WEBPACK_IMPORTED_MODULE_0__["game"].elMiddleDice.style.display = "none";
        document.querySelector(".player-".concat(_init__WEBPACK_IMPORTED_MODULE_0__["game"].activePlayer, "-panel")).classList.add("winner");
        document.querySelector(".player-".concat(_init__WEBPACK_IMPORTED_MODULE_0__["game"].activePlayer, "-panel")).classList.remove("active");
        _init__WEBPACK_IMPORTED_MODULE_0__["game"].isGamePlaying = false;
      } else {
        nextPlayer();
      }
    }
  }); //Setting up the function to switch player. It will be used in the Roll button and in the Hold button.

  var nextPlayer = function nextPlayer() {
    //If the number is one, Pass to the other player
    _init__WEBPACK_IMPORTED_MODULE_0__["game"].activePlayer === 0 ? _init__WEBPACK_IMPORTED_MODULE_0__["game"].activePlayer = 1 : _init__WEBPACK_IMPORTED_MODULE_0__["game"].activePlayer = 0; //Reset the round score for everybody

    _init__WEBPACK_IMPORTED_MODULE_0__["game"].roundScore = 0;
    _init__WEBPACK_IMPORTED_MODULE_0__["game"].elCurrent0.textContent = "0";
    _init__WEBPACK_IMPORTED_MODULE_0__["game"].elCurrent1.textContent = "0"; //Adapt the style according to the active player

    _init__WEBPACK_IMPORTED_MODULE_0__["game"].elPlayerPanel0.classList.toggle("active");
    _init__WEBPACK_IMPORTED_MODULE_0__["game"].elPlayerPanel1.classList.toggle("active"); //Hide the dice as soon as it is the new player's turn

    _init__WEBPACK_IMPORTED_MODULE_0__["game"].elMiddleDice.style.display = "none";
  }; //Start a new game with a new initialization


  _init__WEBPACK_IMPORTED_MODULE_0__["game"].elBtnNew.addEventListener("click", function () {
    _init__WEBPACK_IMPORTED_MODULE_0__["game"].init();
  });
});

/***/ }),

/***/ "./src/js/init.js":
/*!************************!*\
  !*** ./src/js/init.js ***!
  \************************/
/*! exports provided: game */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "game", function() { return game; });
//Set up the variables
var game = {
  scores: 0,
  roundScore: 0,
  activePlayer: 0,
  isGamePlaying: 0,
  elBtnRoll: null,
  elBtnHold: null,
  elBtnNew: null,
  elMiddleDice: null,
  elScore0: null,
  elScore1: null,
  elCurrent0: null,
  elCurrent1: null,
  elPlayerPanel0: null,
  elPlayerPanel1: null,
  init: function init() {
    this.scores = [0, 0]; //starting scores for all the players are set to zero

    this.roundScore = 0; //0 is the Active Player. 1 is the other player.

    this.activePlayer = 0; //here I set the first player to play
    //Set the state variable to true in order to enable the game

    this.isGamePlaying = true; //The buttons

    this.elBtnRoll = document.querySelector(".btn-roll");
    this.elBtnHold = document.querySelector(".btn-hold");
    this.elBtnNew = document.querySelector(".btn-new");
    this.elMiddleDice = document.querySelector(".dice");
    this.elMiddleDice.style.display = "none"; //here I use getElementById because we have IDs in HTML and it's faster than querySelector

    this.elScore0 = document.getElementById("score-0");
    this.elScore1 = document.getElementById("score-1");
    this.elCurrent0 = document.getElementById("current-0");
    this.elCurrent1 = document.getElementById("current-1"); //Setting round and total scores to zero.

    this.elScore0.textContent = 0;
    this.elScore1.textContent = 0;
    this.elCurrent0.textContent = 0;
    this.elCurrent1.textContent = 0; //Resetting the player names and classes after in case the victory changed the values

    document.getElementById("name-0").textContent = "Player 1";
    document.getElementById("name-1").textContent = "Player 2";
    document.querySelector(".player-0-panel").classList.remove("winner");
    document.querySelector(".player-1-panel").classList.remove("winner");
    document.querySelector(".player-0-panel").classList.add("active"); //here I add it, because after starting a new game I want to make sure the player 1 is well styled

    document.querySelector(".player-1-panel").classList.remove("active");
  }
};

/***/ })

/******/ });
//# sourceMappingURL=bundle.min.js.map